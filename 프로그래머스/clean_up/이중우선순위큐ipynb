{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"이중우선순위큐.ipynb","provenance":[],"authorship_tag":"ABX9TyPVzXl80z6oP47X8lq8dLmK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":9,"metadata":{"id":"VV5i_Tq3q3VR","executionInfo":{"status":"ok","timestamp":1650930231082,"user_tz":-540,"elapsed":3,"user":{"displayName":"최성욱","userId":"13743263358405601222"}}},"outputs":[],"source":["import heapq\n","def check_intersect(min_heap, max_heap):\n","    max_heap_list = set([h[1] for h in max_heap])\n","    min_heap_list = set(min_heap)\n","    \n","    if min_heap_list.intersection(max_heap_list):\n","        return min_heap, max_heap\n","    else:\n","        return [], []\n","\n","def solution(operations):\n","\n","    # 최대힙, 최소힙을 이용\n","    max_heap = []\n","    min_heap = []\n","    for oper in operations:\n","\n","        # 삽입 시, 두 힙에 모두 삽입\n","        if 'I' in oper:\n","            num = int(oper.split()[1])\n","            heapq.heappush(max_heap, (-num, num))\n","            heapq.heappush(min_heap, num)\n","        \n","        # 최소값 삭제 시, 최소힙에서 삭제\n","        if min_heap and oper == \"D -1\":\n","            heapq.heappop(min_heap)\n","\n","        # 최대힙 삭제 시, 최대힙에서 삭제\n","        elif max_heap and oper == \"D 1\":\n","            heapq.heappop(max_heap)\n","\n","        # 둘 중 하나의 힙에라도 값이 없다면, 둘 다 빈 리스트로 초기화\n","        min_heap, max_heap = check_intersect(min_heap, max_heap)\n","        \n","    max_set, min_set = set(), set()\n","    for max_h in max_heap:\n","        max_set.add(max_h[1])\n","    for min_h in min_heap:\n","        min_set.add(min_h)\n","    \n","    inter = max_set.intersection(min_set)\n","    \n","    if inter:\n","        return max(inter), min(inter)\n","    else:\n","        return [0,0]"]},{"cell_type":"markdown","source":["- 최소힙, 최대힙을 이용한 이중우선순위 큐\n","\n","1. Insert가 들어왔을 때, 최대힙, 최소힙 모두에 값을 삽입\n","2. 최소값 삭제할 경우, 최소힙에서 값을 삭제\n","3. 최대값 삭제할 경우, 최대힙에서 값을 삭제\n","4. 최대힙과 최소힙 사이의 교집합이 없을 경우, 두 힙 모두 빈 리스트로 초기화한다.\n","\n","**Caution**: pop을 해서 값을 빼줄 때, 그 list 혹은 배열에 값이 있어야만 뺄 수 있으므로 조건문을 달아주는 것이 좋다."],"metadata":{"id":"d0UtidLmq9-J"}},{"cell_type":"code","source":["operations = [\"I 5\", \"I -5\", \"D -1\", \"I 55\", \"D -1\"]\n","solution(operations)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cBF4qqZqFvuS","executionInfo":{"status":"ok","timestamp":1650930600460,"user_tz":-540,"elapsed":7,"user":{"displayName":"최성욱","userId":"13743263358405601222"}},"outputId":"92b24542-ec39-4611-9a99-67d3a656c3a9"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[5] [(-5, 5)]\n","[-5, 5] [(-5, 5), (5, -5)]\n","[5] [(-5, 5), (5, -5)]\n","[5, 55] [(-55, 55), (5, -5), (-5, 5)]\n","[55] [(-55, 55), (5, -5), (-5, 5)]\n"]},{"output_type":"execute_result","data":{"text/plain":["(55, 55)"]},"metadata":{},"execution_count":12}]}]}